import 'package:flutter/material.dart';
import 'package:audio_query/audio_query.dart';
import 'package:permission_handler/permission_handler.dart';

class AllSongs extends StatefulWidget {
   final OnAudioQuery audioQuery = OnAudioQuery();
  List<SongModel> songs = [];
  var permission=false;

  @override
  void initState() {
    super.initState();
    getPermission();
  }
getPermission() async {
    var result=await Permission.storage.request();
    if(result.isDenied){
       getPermission();
    }
    if(result.isGranted){
      permission=true;
      setState(() {});
    }else{
       getPermission();
    }
}

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Local Songs'),
        centerTitle: true,
      ),
      body:Center(
        child: FutureBuilder<List<SongModel>>(
          future: audioQuery.querySongs(
            sortType: null,
            orderType: OrderType.ASC_OR_SMALLER,
            uriType: UriType.EXTERNAL,
            ignoreCase: true,
          ),
          builder: (context, item) {
            // Display error, if any.
            if (item.hasError) {
              return Text(item.error.toString());
            }

            // Waiting content.
            if (item.data == null) {
              return const CircularProgressIndicator();
            }

            // 'Library' is empty.
            if (item.data!.isEmpty) return const Text("Nothing found!");

            // You can use [item.data!] direct or you can create a:
            // List<SongModel> songs = item.data!;
            return ListView.builder(
              itemCount: item.data!.length,
              itemBuilder: (context, index) {
                return Container(
                  margin: const EdgeInsets.only(top: 30),
                  decoration: const BoxDecoration(
                    gradient:LinearGradient(colors:[Colors.green,Colors.redAccent,Colors.yellow])
                  ),
                  child: ListTile(
                    title: Text(item.data![index].title),
                    subtitle: Text(item.data![index].artist ?? "No Artist"),
                    trailing: const Icon(Icons.arrow_forward_rounded),
                    // This Widget will query/load image.
                    // You can use/create your own widget/method using [queryArtwork].
                    leading: QueryArtworkWidget(
                      controller: audioQuery,
                      id: item.data![index].id,
                      type: ArtworkType.AUDIO,
                    ),
                  ),
                );
              },
            );
          },
        ),
      ),
    );
  }
}
